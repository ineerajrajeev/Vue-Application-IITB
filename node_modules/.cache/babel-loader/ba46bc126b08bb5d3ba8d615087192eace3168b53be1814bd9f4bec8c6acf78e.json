{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"CoursesView\",\n  data() {\n    return {\n      courses: [],\n      current_page: 1,\n      itemsPerPage: 10\n    };\n  },\n  methods: {\n    getCourses() {\n      axios.get(\"http://127.0.0.1:8000/api/courses\").then(response => {\n        this.courses.push(...response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  },\n  mounted() {\n    this.getCourses();\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.current_page - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.courses.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.courses.length / this.itemsPerPage);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","courses","current_page","itemsPerPage","methods","getCourses","get","then","response","push","catch","error","console","log","mounted","computed","paginatedItems","start","end","slice","totalPages","Math","ceil","length"],"sources":["/Users/ineerajrajeev/Desktop/iitb/app/src/components/Courses.vue"],"sourcesContent":["<template>\n  <h1>Courses</h1>\n  <div class=\"row row-cols-2 g-3\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Add Course</h5>\n          <p class=\"card-text\">\n            This is a longer card with supporting text below as a natural\n            lead-in to additional content. This content is a little bit longer.\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Find Course</h5>\n          <div class=\"accordion card-text\" id=\"accordionExample\">\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseTwo\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseTwo\"\n                >\n                  Accordion Item #2\n                </button>\n              </h2>\n              <div\n                id=\"collapseTwo\"\n                class=\"accordion-collapse collapse\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </div>\n              </div>\n            </div>\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseThree\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseThree\"\n                >\n                  Accordion Item #3\n                </button>\n              </h2>\n              <div\n                id=\"collapseThree\"\n                class=\"accordion-collapse collapse\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <strong>This is the third item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </div>\n              </div>\n            </div>\n          </div>\n          <nav class=\"card-footer text-body-secondary\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\" @click=\"current_page--\"\n                  >Previous</a\n                >\n              </li>\n              <li class=\"page-item\" v-for=\"page in totalPages\" :key=\"page\">\n                <a class=\"page-link\" href=\"#\" @click=\"current_page = page\">{{\n                  page\n                }}</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" @click=\"current_page++\">Next</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"CoursesView\",\n  data() {\n    return {\n      courses: [],\n      current_page: 1,\n      itemsPerPage: 10,\n    };\n  },\n  methods: {\n    getCourses() {\n      axios\n        .get(\"http://127.0.0.1:8000/api/courses\")\n        .then((response) => {\n          this.courses.push(...response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n  mounted() {\n    this.getCourses();\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.current_page - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.courses.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.courses.length / this.itemsPerPage);\n    },\n  },\n};\n</script>\n"],"mappings":";AA0GA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,CAAC;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXP,KAAI,CACDQ,GAAG,CAAC,mCAAmC,EACvCC,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,GAAGD,QAAQ,CAACR,IAAI,CAAC;MACrC,CAAC,EACAU,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,UAAU,CAAC,CAAC;EACnB,CAAC;EACDU,QAAQ,EAAE;IACRC,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACf,YAAW,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACzD,MAAMe,GAAE,GAAID,KAAI,GAAI,IAAI,CAACd,YAAY;MACrC,OAAO,IAAI,CAACF,OAAO,CAACkB,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACvC,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACrB,OAAO,CAACsB,MAAK,GAAI,IAAI,CAACpB,YAAY,CAAC;IAC3D;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}