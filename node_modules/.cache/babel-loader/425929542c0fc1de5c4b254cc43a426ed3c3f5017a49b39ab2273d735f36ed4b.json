{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Courses\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"row row-cols-2 g-3\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"col\\\"><div class=\\\"card\\\"><div class=\\\"card-body\\\"><h5 class=\\\"card-title\\\">Add Course</h5><p class=\\\"card-text\\\"> This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer. </p></div></div></div>\", 1);\nconst _hoisted_4 = {\n  class: \"col\"\n};\nconst _hoisted_5 = {\n  class: \"card\"\n};\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createStaticVNode(\"<h5 class=\\\"card-title\\\">Find Course</h5><div class=\\\"accordion card-text\\\" id=\\\"accordionExample\\\"><div class=\\\"accordion-item\\\"><h2 class=\\\"accordion-header\\\"><button class=\\\"accordion-button collapsed\\\" type=\\\"button\\\" data-bs-toggle=\\\"collapse\\\" data-bs-target=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\"> Accordion Item #2 </button></h2><div id=\\\"collapseTwo\\\" class=\\\"accordion-collapse collapse\\\" data-bs-parent=\\\"#accordionExample\\\"><div class=\\\"accordion-body\\\"><strong>This is the second item&#39;s accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It&#39;s also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow. </div></div></div></div>\", 2);\nconst _hoisted_9 = {\n  class: \"card-footer text-body-secondary\"\n};\nconst _hoisted_10 = {\n  class: \"pagination\"\n};\nconst _hoisted_11 = {\n  class: \"page-item\"\n};\nconst _hoisted_12 = [\"onClick\"];\nconst _hoisted_13 = {\n  class: \"page-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"nav\", _hoisted_9, [_createElementVNode(\"ul\", _hoisted_10, [_createElementVNode(\"li\", _hoisted_11, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.current_page--)\n  }, \"Previous\")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.totalPages, page => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"page-item\",\n      key: page\n    }, [_createElementVNode(\"a\", {\n      class: \"page-link\",\n      href: \"#\",\n      onClick: $event => $data.current_page = page\n    }, _toDisplayString(page), 9 /* TEXT, PROPS */, _hoisted_12)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"li\", _hoisted_13, [_createElementVNode(\"a\", {\n    class: \"page-link\",\n    onClick: _cache[1] || (_cache[1] = $event => $data.current_page++)\n  }, \"Next\")])])])])])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_9","_hoisted_10","_hoisted_11","href","onClick","_cache","$event","$data","current_page","_createElementBlock","_Fragment","_renderList","$options","totalPages","page","key","_hoisted_12","_hoisted_13"],"sources":["/Users/ineerajrajeev/Desktop/iitb/app/src/components/Courses.vue"],"sourcesContent":["<template>\n  <h1>Courses</h1>\n  <div class=\"row row-cols-2 g-3\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Add Course</h5>\n          <p class=\"card-text\">\n            This is a longer card with supporting text below as a natural\n            lead-in to additional content. This content is a little bit longer.\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Find Course</h5>\n          <div class=\"accordion card-text\" id=\"accordionExample\">\n            <div class=\"accordion-item\">\n              <h2 class=\"accordion-header\">\n                <button\n                  class=\"accordion-button collapsed\"\n                  type=\"button\"\n                  data-bs-toggle=\"collapse\"\n                  data-bs-target=\"#collapseTwo\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"collapseTwo\"\n                >\n                  Accordion Item #2\n                </button>\n              </h2>\n              <div\n                id=\"collapseTwo\"\n                class=\"accordion-collapse collapse\"\n                data-bs-parent=\"#accordionExample\"\n              >\n                <div class=\"accordion-body\">\n                  <strong>This is the second item's accordion body.</strong> It\n                  is hidden by default, until the collapse plugin adds the\n                  appropriate classes that we use to style each element. These\n                  classes control the overall appearance, as well as the showing\n                  and hiding via CSS transitions. You can modify any of this\n                  with custom CSS or overriding our default variables. It's also\n                  worth noting that just about any HTML can go within the\n                  <code>.accordion-body</code>, though the transition does limit\n                  overflow.\n                </div>\n              </div>\n            </div>\n          </div>\n          <nav class=\"card-footer text-body-secondary\">\n            <ul class=\"pagination\">\n              <li class=\"page-item\">\n                <a class=\"page-link\" href=\"#\" @click=\"current_page--\"\n                  >Previous</a\n                >\n              </li>\n              <li class=\"page-item\" v-for=\"page in totalPages\" :key=\"page\">\n                <a class=\"page-link\" href=\"#\" @click=\"current_page = page\">{{\n                  page\n                }}</a>\n              </li>\n              <li class=\"page-item\">\n                <a class=\"page-link\" @click=\"current_page++\">Next</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"CoursesView\",\n  data() {\n    return {\n      courses: [],\n      current_page: 1,\n      itemsPerPage: 10,\n    };\n  },\n  methods: {\n    getCourses() {\n      axios\n        .get(\"http://127.0.0.1:8000/api/courses\")\n        .then((response) => {\n          this.courses.push(...response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    },\n  },\n  mounted() {\n    this.getCourses();\n  },\n  computed: {\n    paginatedItems() {\n      const start = (this.current_page - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.courses.slice(start, end);\n    },\n    totalPages() {\n      return Math.ceil(this.courses.length / this.itemsPerPage);\n    },\n  },\n};\n</script>\n"],"mappings":";gCACEA,mBAAA,CAAgB,YAAZ,SAAO;;EACNC,KAAK,EAAC;AAAoB;;;EAYxBA,KAAK,EAAC;AAAK;;EACTA,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;;;EAmCfA,KAAK,EAAC;AAAiC;;EACtCA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAW;;;EAUjBA,KAAK,EAAC;AAAW;;6DA9DjCC,UAAgB,EAChBF,mBAAA,CAqEM,OArENG,UAqEM,GApEJC,UAUM,EACNJ,mBAAA,CAwDM,OAxDNK,UAwDM,GAvDJL,mBAAA,CAsDM,OAtDNM,UAsDM,GArDJN,mBAAA,CAoDM,OApDNO,UAoDM,GAnDJC,UAAuC,EAkCvCR,mBAAA,CAgBM,OAhBNS,UAgBM,GAfJT,mBAAA,CAcK,MAdLU,WAcK,GAbHV,mBAAA,CAIK,MAJLW,WAIK,GAHHX,mBAAA,CAEC;IAFEC,KAAK,EAAC,WAAW;IAACW,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,YAAY;KAC/C,UAAQ,E,sBAGbC,mBAAA,CAIKC,SAAA,QAAAC,WAAA,CAJgCC,QAAA,CAAAC,UAAU,EAAlBC,IAAI;yBAAjCL,mBAAA,CAIK;MAJDjB,KAAK,EAAC,WAAW;MAA6BuB,GAAG,EAAED;QACrDvB,mBAAA,CAEM;MAFHC,KAAK,EAAC,WAAW;MAACW,IAAI,EAAC,GAAG;MAAEC,OAAK,EAAAE,MAAA,IAAEC,KAAA,CAAAC,YAAY,GAAGM;wBACnDA,IAAI,wBAAAE,WAAA,E;kCAGRzB,mBAAA,CAEK,MAFL0B,WAEK,GADH1B,mBAAA,CAAqD;IAAlDC,KAAK,EAAC,WAAW;IAAEY,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,KAAA,CAAAC,YAAY;KAAI,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}